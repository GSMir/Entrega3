---
title: "Clustering"
author: "Ángel García, Arnau Piferrer y Guillem Serra"
format: html
editor: visual
---

Este es el [repositorio](https://github.com/GSMir/Entrega3) de GitHub en el que alojaremos todos los archivos relacionados con esta entrega. Para consultar la fuente de la que se ha extraído nuestro Dataset consulta el siguiente [link](https://archive.ics.uci.edu/dataset/45/heart+disease). Nuestro Dataset ha sido publicado por la Universidad de California de Irvine.

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = FALSE)
```

```{r, message = FALSE,warning=FALSE}
library(readr)
library(tidyverse)
library(dplyr)
library(patchwork)
library(MVA)
library(corrplot)
library(graphics)
library(GGally)
library("aplpack")
library(ggplot2)
library(factoextra)
```

```{r}
heartdisease <- read_csv("https://archive.ics.uci.edu/ml/machine-learning-databases/heart-disease/processed.cleveland.data", col_names = FALSE, show_col_types = FALSE) %>%
  filter(!str_detect(X13, "\\?"), !str_detect(X12, "\\?")) %>%
  mutate(across(c(X2, X3, X6, X7, X9, X11), as.factor), 
         tHR2 = case_when(
           X13 == "3.0" ~ "3",
           X13 == "6.0" ~ "6",
           X13 == "7.0" ~ "7"),
         fdiag2 = case_when(
           X14 %in% 0:4 ~ as.character(X14 %>% as.numeric() > 0)),
         across(c(tHR2, fdiag2), as.factor),
         age = X1, restbp = X4, chol = X5, maxHR = X8, expeak = X10) %>%
  select(age, sex = X2, cp = X3, restbp, chol, fbs = X6, restecg = X7, 
         maxHR = X8, exang = X9, expeak, slope = X11, tHR = tHR2, fdiag = fdiag2)



heartdisease_numeric <- heartdisease %>%
  select(where(is.numeric)) %>%
  scale() # Això tal vegada no s'hauria de fer amb totes ses variables, perquè es anys no sé si tenen sentit que estiguin escalats
heartdisease_categoric <- heartdisease %>%
  select(where(is.factor))
```



```{r}
mat_dist <- dist(x = heartdisease_numeric, method = "euclidean")
#round(as.matrix(mat_dist)[1:9, 1:9], 2)
```

```{r}
mat_dist <- get_dist(x = heartdisease_numeric, method = "pearson")
#round(as.matrix(mat_dist)[1:9, 1:9], 2)
fviz_dist(dist.obj = mat_dist, lab_size = 5) +
theme(legend.position = "right") #Heatmap de matrices de distancia
```

```{r} 
set.seed(420) #Mirar quins hauríem de fer
# Suponiendo que heartdisease_numeric ya está cargado y que eliges dos columnas específicas
# Por ejemplo, 'restbp' y 'chol'
datos <- heartdisease_numeric[, c("restbp", "chol")]

# A continuación, sigue tu código original, pero sin la parte de simulación
# Se genera un vector que asigne aleatoriamente cada observación a uno de los 4 grupos
grupo <- sample(x = 1:4, size = nrow(datos), replace = TRUE)
datos <- cbind(datos, grupo)

# Aquí deberías definir cómo quieres manejar las medias de los grupos
# En este caso, simplemente asigno medias aleatorias como en tu ejemplo
media_grupos <- matrix(rnorm(n = 8, mean = 0, sd = 4), nrow = 4, ncol = 2,
                       dimnames = list(NULL, c("media_restbp", "media_chol")))
media_grupos <- cbind(grupo = 1:4, media_grupos)

datos <- merge(datos, media_grupos, by = "grupo")
datos[,"restbp"] <- datos[, "restbp"] + datos[, "media_restbp"]
datos[,"chol"] <- datos[, "chol"] + datos[, "media_chol"]

# Gráfica
plot(x = datos[,"restbp"], y = datos[,"chol"], col = datos[,"grupo"], pch = 19,
     xlab = "Presión Sanguínea en Reposo", ylab = "Nivel de Colesterol")
```




