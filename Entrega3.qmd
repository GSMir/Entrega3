---
title: "Entrega3"
author: "Ángel García, Arnau Piferrer y Guillem Serra"
format: html
editor: visual
---

<!-- Aixo per fer es beamer https://bookdown.org/yihui/rmarkdown/beamer-presentation.html -->

<!-- data set original https://archive.ics.uci.edu/dataset/45/heart+disease -->

Este es el [repositorio](https://github.com/GSMir/Entrega3) de GitHub en el que alojaremos todos los archivos relacionados con esta entrega. Para consultar la fuente de la que se ha extraído nuestro Dataset consulta el siguiente [link](https://archive.ics.uci.edu/dataset/45/heart+disease).

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = FALSE)
```

```{r, message = FALSE,warning=FALSE}
library(readr)
library(tidyverse)
library(patchwork)
library(MVA)
library(corrplot)
library(graphics)
library(GGally)
library("aplpack")

heartdisease = read_csv("https://archive.ics.uci.edu/ml/machine-learning-databases/heart-disease/processed.cleveland.data", col_names = FALSE, show_col_types = FALSE)
```

Antes de empezar con el análisis multivariante se realizará una primera limpieza del Dataset. En primer lugar, renombramos las variables para hacerlas más acordes a aquello que representan (en el archivo inicial estaban nombradas como $X_1$, $X_2$, $...$, $X_{14}$). A continuación, pasamos a factor las variables categóricas (hemos encontrado que muchas no venían dadas como factor incialmente). Por último, dado que tenemos un número pequeño de muestras a las que les falta algún dato (concretamente 6), las hemos eliminado. Recalcar que los datos ausentes venían dados por interrogantes en lugar de NA's.

```{r}
# Renombramos las variables:
heartdisease = heartdisease %>% rename(age = X1, sex = X2, cp = X3, restbp = X4, chol = X5, fbs = X6, restecg = X7, maxHR = X8, exang = X9, expeak = X10, slope = X11, mves = X12, tHR = X13, fdiag = X14)

# Se eliminan las entradas con valor '?'
heartdisease = heartdisease %>% filter(!str_detect(tHR, "\\?") & (!str_detect(mves, "\\?")))
```

```{r}

# ESTA CHUNK HAY QUE LIMPIARLA

heartdisease <- heartdisease %>%
    mutate(mves2 = as.numeric(heartdisease$mves), .after = mves) %>%
    select(-mves) %>%
    rename(mves = mves2)
heartdisease <- heartdisease %>%
    mutate(sex2 = as.factor(heartdisease$sex), .after = sex) %>%
    select(-sex) %>%
    rename(sex = sex2)
heartdisease <- heartdisease %>%
    mutate(cp2 = as.factor(heartdisease$cp), .after = cp) %>%
    select(-cp) %>%
    rename(cp = cp2)
heartdisease <- heartdisease %>%
    mutate(fbs2 = as.factor(heartdisease$fbs), .after = fbs) %>%
    select(-fbs) %>%
    rename(fbs = fbs2)
heartdisease <- heartdisease %>%
    mutate(restecg2 = as.factor(heartdisease$restecg), .after = restecg) %>%
    select(-restecg) %>%
    rename(restecg = restecg2)
heartdisease <- heartdisease %>%
    mutate(exang2 = as.factor(heartdisease$exang), .after = exang) %>%
    select(-exang) %>%
    rename(exang = exang2)
heartdisease <- heartdisease %>%
    mutate(slope2 = as.factor(heartdisease$slope), .after = slope) %>%
    select(-slope) %>%
    rename(slope = slope2)
heartdisease = heartdisease %>% 
    mutate(
        tHR2 = case_when(
            tHR == "3.0" ~ "3",
            tHR == "6.0" ~ "6",
            tHR == "7.0" ~ "7"),
        .keep = "all", .after = tHR) %>%
    select(-tHR) %>%
    rename(tHR = tHR2)
heartdisease <- heartdisease %>%
    mutate(tHR2 = as.factor(heartdisease$tHR), .after = tHR) %>%
    select(-tHR) %>%
    rename(tHR = tHR2)

# Ángel: he comentado esta última porque la última variable (X14 o num) representa si el paciente ha padecido o no alguna enfermedad del corazón (lo miré en la documentación y abriendo el Dataset en Python, que incluía algún comentario sobre las variables también).

# (Lo dejo por aquí pero creo que podría quitarse)

# heartdisease <- heartdisease %>%
#     mutate(fdiag2 = as.factor(heartdisease$fdiag), .after = fdiag) %>%
#     select(-fdiag) %>%
#     rename(fdiag = fdiag2)

heartdisease = heartdisease %>%
    mutate(
        fdiag2 = case_when(
            fdiag == "0" ~ "0",
            fdiag == "1" ~ "1",
            fdiag == "2" ~ "1",
            fdiag == "3" ~ "1",
            fdiag == "4" ~ "1"),
        .keep = "all", .after = fdiag) %>%
    select(-fdiag) %>%
    rename(fdiag = fdiag2)
heartdisease <- heartdisease %>%
    mutate(fdiag2 = as.factor(heartdisease$fdiag), .after = fdiag) %>%
    select(-fdiag) %>%
    rename(fdiag = fdiag2)

```

El objetivo del estudio original tenía como principal objetivo comparar dos modelos estadísticos (uno antiguo y otro novedoso) que proporcioban estimaciones de la probabilidad de enfermedad coronaria en pacientes que presentaban dolencias en el pecho. Se tomaron las medidas que se detallan en el Dataset a un total de 303 pacientes de Cleveland (Ohio) y se aplicaron otros tres grupos de Hungría, California y Suiza. Nuestro objetivo en esta entrega será determinar los rasgos más significativo del Dataset, así como las relaciones que puedan resultar de mayor interés desde el punto de vista clínico.

En este conjunto de datos encontramos `r nrow(heartdisease)` visualizaciones de `r ncol(heartdisease)` variables. Se describen a continuación las variables del mismo:

```{r, fig.cap = "Electrocardiograma", out.width = '60%'}
knitr::include_graphics("SinusRhythmLabels.svg.png")
```

-   **age**: Edad del paciente. Número entero. El conjunto de edades de los sujetos obersvados está comprendido entre los 29 y los 77 años. La media de edad de los pacientes está en los 54.54 años.

-   **sex**: Sexo cromosómico del paciente. Variable categórica que toma el valor 0 para el sexo femenino y 1 para el masculino. Encontramos un total de 96 mujeres y 201 hombres.

-   **cp**: (del inglés *"Chest Pain"*). Hace referencia al tipo de dolor que se sufre el paciente en el pecho. Se trata de una variable categórica que toma los valores 1 para angina de pecho típica, 2 para angina de pecho atípica, 3 para dolores que no son de angina de pecho y 4 para asintomático.

-   **restbp**: Presión sanguínea medida en reposo (mm Hg). Es una variable numérica con valor mínimo 94 y valor máximo 200. La presión media del grupo de pacientes es de 131.69 mm Hg.

-   **chol**: Nivel de colesterol en sangre (mg/dl). Variable numérica con mínimo de 126 mg/dl y máximo de 564 mg/dl, siendo el nivel medio de colesterol 247.35 mg/dl.

-   **fbs**: Booleano que determina si la cantidad de azúcar en sangre en ayuno es mayor a 120mg/dl. Toma el valor 0 para negarlo, y 1 para afirmarlo.

-   **restecg**: Resultados del electrocardiograma en reposo. Se trata de una variable categórica. Los resultados normales vienen dados por 0, con un 1 se indican aquellos pacientes con anomalías en el segmento ST-T (que pueden ser inversiones de las ondas T y/o elevaciones o depresiones de las ondas ST superiores a 0.05mV). Finalmente, aquellos pacientes con un 2 se caracterizan por tener una alta probabilidad (o segura) una hipertrofia ventricular.

-   **maxHR**: Indica el ritmo cardíaco máximo alcanzado en una prueba de esfuerzo. Es una variable numérica con valor mínimo de 71, y valor máximo de 202. El valor medio de esta variable es 149.60.

-   **exang**: Booleano que indica si la angina se ha inducido por el ejercicio, tomando 1 cuando la respuesta sea afirmativa y 0 en caso contrario.

-   **expeak**: Indica la depresión en el segmento ST inducida por el ejercicio en relación con el reposo. Es una variable numérica con valor mínimo de 0 y valor máximo de 6.20.

-   **slope**: Indica la pendiente en la cima del segmento ST de ejercicio. Es una variable de tipo factor que toma el valor 0 cuando la pendiente es positiva, 1 cuando la pendiente es nula y 2 cuando la pendiente es negativa.

-   **mves**: Número de vasos principales coloreados por fluoroscopía. Toma valores enteros entre 0 y 3, inclusive.

-   **tHR**: Variable categórica que indica el tipo de ritmo cardíaco. Toma el valor 3 para el ritmo normal, 6 para defecto reparado, y 7 para defecto reversible.

-   **fdiag**: Booleano para el diagnosis de la enfermedad del corazón. Se comenta en la fuente que toma los valores enteros comprendidos entre 0 y 4 (ambos incluidos). No se especifica si se trata del número exacto de patologías diagnosticadas a cada paciente, pero sí que se menciona que el valor 0 se asigna únicamente a aquellos pacientes a los que no se les ha diagnosticado ninguna enfermedad y el resto de valores se atribuyen a los que sí tienen (o han tenido) alguna patología cardíaca. Nosotros la hemos transformado en una variable de tipo factor (0 = "libre enfermedad" y 1 = "diagnosticado").

<!-- Toma el 0 cuando la reducción del diámetro es menor al 50%, y 1 cuando es superior al 50%. -->

# Análisis exploratorio del conjunto de datos:

## 1) Distribución de los datos numéricos:

Mostramos en primer lugar la distribución de las variables numéricas (que son edad, presión arterial, nivel de colesterol y frecuencia cardiaca máxima) para ver cómo están repartidas en nuestro conjunto de datos (si de forma uniforme o no uniforme).

```{r}

# Creamos 4 histogramas:

histogram1 <- heartdisease %>%
  ggplot(aes(x = age)) +
  geom_histogram(binwidth = 5, fill = "blue", color = "black") +
  labs(
    title = "Distribución edades pacientes",
    x = "Edad",
    y = "Frecuencia"
  )

histogram2 <- heartdisease %>%
  ggplot(aes(x = restbp)) +
  geom_histogram(binwidth = 5, fill = "green", color = "black") +
  labs(
    title = "Niveles de presión arterial",
    x = "Presión arterial (reposo)",
    y = "Frecuencia"
  )

histogram3 <- heartdisease %>%
  ggplot(aes(x = chol)) +
  geom_histogram(binwidth = 10, fill = "red", color = "black") +
  labs(
    title = "Niveles de colesterol",
    x = "Colesterol en sangre (mg/dl)",
    y = "Frecuencia"
  )

histogram4 <- heartdisease %>%
  ggplot(aes(x = maxHR)) +
  geom_histogram(binwidth = 5, fill = "purple", color = "black") +
  labs(
    title = "Frecuencia cardíaca máxima",
    x = "Ritmo cardíaco máximo",
    y = "Frecuencia"
  )

# Combinamos para acabar los 4 histogramas en una sola figura:
histogram1 + histogram2 + histogram3 + histogram4

```

## 2) Frecuencias de los datos categóricos:

```{r}

plot_sex <- heartdisease %>%
  count(sex) %>%
  ggplot(aes(x = factor(sex), y = n)) +
  geom_bar(stat = "identity", fill = "blue") +
  labs(
    title = "Sexo",
    x = "",
    y = "Frecuencia") +
  scale_x_discrete(labels = c("Mujer", "Hombre"))


plot_cp <- heartdisease %>%
  count(cp) %>%
  ggplot(aes(x = factor(cp), y = n)) +
  geom_bar(stat = "identity", fill = "green") +
  labs(
    title = "Dolores de pecho",
    x = "",
    y = "Frecuencia") +
    scale_x_discrete(labels = c("Típica", "Atípica", "No", "Asínt."))

plot_fbs <- heartdisease %>%
  count(fbs) %>%
  ggplot(aes(x = factor(fbs), y = n)) +
  geom_bar(stat = "identity", fill = "red") +
  labs(
    title = "Azúcar en sangre",
    x = "" ,
    y = "Frecuencia"
  ) +   scale_x_discrete(labels = c("No supera", "Supera"))


# Combina los gráficos en una figura en paralelo
(plot_sex | plot_cp | plot_fbs)

```

## 3) Cruce del nivel de colesterol únicamente según el sexo:

Observamos que el nivel de colesterol de las mujeres del grupo estudiado es más variado (disperso) que el de los hombres. Esto se aprecia en la amplitud de la caja del diagrama y, se confirma con el *outlier* que supera los 550mg/dl.

```{r}
# Estudiamos la dispersión de los niveles de colesterol según el sexo.

ggplot(heartdisease, aes(x = factor(sex), y = chol, fill = factor(sex))) +
  geom_boxplot() +
  labs(
    title = "Niveles de colesterol según el sexo del paciente",
    x = "Sexo",
    y = "Colesterol en sangre (mg/dl)"
  ) +
  scale_x_discrete(labels = c("Mujer", "Hombre")) +
  theme_minimal() +
  theme(legend.title = element_blank(), legend.position = "none")  # Oculta el título de la leyenda


```

## 4) Niveles de colesterol según edad y sexos de los pacientes.

Nos parece relevante adquirir una información más desglosada sobre la dispersión de los niveles de colesterol según la edad y sexo del paciente. Para ello, hemos optado por clasificar por grupos de edad y repetir el mismo gráfico de antes. En esta nueva versión podemos observar una tendencia creciente en los niveles de colesterol de las mujeres hasta los 69 años, así como un mayor grado de dispersión. En los hombres también se observa esta tendencia al alza, aunque más atenuada.

```{r}
# Creamos una nueva columna 'decade' que agrupa las edades en décadas:
heartdisease <- heartdisease %>%
  mutate(decade = cut(age, breaks = seq(29, 80, by = 10), right = FALSE))

# Creamos un diagrama de caja y bigotes:

ggplot(heartdisease, aes(x = decade, y = chol, fill = factor(sex))) +
  geom_boxplot() +
  labs(
    title = "Colesterol según sexo (por franjas de edad)",
    x = "Franjas de edad",
    y = "Nivel de Colesterol (mg/dl)"
  ) +
  scale_fill_discrete(name = "Sexo", labels = c("0" = "Mujer", "1" = "Hombre")) +
  theme_minimal() +
  theme(legend.title = element_blank())

```

Se puede observar que, sin tener en cuenta la última franja de edad, a medida que crece la edad, también crece la dispersion. Una de las posibles razones de porque no se cumple esto en la última franja, se puede deber a la pequeña muestra que tenemos de ella.

## 5) Se replican los gráficos anteriores pero para el nivel de presión sanguínea.

```{r}
ggplot(heartdisease, aes(x = factor(sex), y = restbp, fill = factor(sex))) +
  geom_boxplot() +
  labs(
    title = "Nivel de Presión Arterial en Reposo según Sexo",
    x = "Sexo",
    y = "Nivel de Presión Arterial en Reposo (mm Hg)"
  ) +
  scale_x_discrete(labels = c("Mujeres", "Hombres")) +
  theme_minimal() +
  theme(legend.title = element_blank())

```

No se puede observar diferencias entre hombres y mujeres referente al nivel de presión arterial en reposo. 4)

```{r}
# Creamos una nueva columna 'decade' que agrupa las edades en décadas
heartdisease <- heartdisease %>%
  mutate(decade = cut(age, breaks = seq(29, 80, by = 10), right = FALSE))

# Creamos un diagrama de caja y bigotes para 'restbp':
ggplot(heartdisease, aes(x = decade, y = restbp, fill = factor(sex))) +
  geom_boxplot() +
  labs(
    title = "Nivel de Presión Arterial en Reposo por Sexo y Década de Edad",
    x = "Década de Edad",
    y = "Nivel de Presión Arterial en Reposo (mm Hg)"
  ) +
  scale_fill_discrete(name = "Sexo", labels = c("0" = "Mujer", "1" = "Hombre")) +
  theme_minimal() +
  theme(legend.title = element_blank())

```

En cambio si se puede observar que a medida que va aumentando la edad, tambien crece la dispersión del nivel de presión arterial en reposo. Se puede destacar que todos los puntos outliers estan en la misma franja de edad.

Matrices de dispersión:

```{r}
a<-heartdisease %>%
  select(age,restbp,chol,maxHR, expeak)

pairs(a,
      col = c("red", "blue")[as.integer(heartdisease$sex)], 
      pch = 18)


```

```{r}
a<-heartdisease %>%
  select(age,restbp,chol,maxHR, expeak,mves)

ggpairs(a, mapping = aes(color = heartdisease$sex))


```

5)  Nube de puntos: con esto podríamos ver si hay (a priori, luego podemos hacer el contraste de correlación oportuno) correlación/covarianza entre las variables maxHR y Colesterol. (La idea sería que las personas con mayor nivel de colesterol suelen estar menos en forma y por ello sus pulsaciones podrían dispararse al hacer ejercicio).

```{r}

# Carga la biblioteca ggplot2 si aún no lo has hecho
library(ggplot2)

# Crea un scatter plot de chol y maxHR con colores por género
ggplot(heartdisease, aes(x = age, y = maxHR, color = factor(sex))) +
  geom_point() +
  labs(
    title = "Nube de Puntos de Edad vs. Frecuencia Cardíaca Máxima",
    x = "Edad",
    y = "Frecuencia Cardíaca Máxima"
  ) +
  scale_color_manual(values = c("blue", "red"), labels = c("Mujer", "Hombre")) +
  theme_minimal()


```

7)  

```{r}

# Crea un boxplot de "chol" por "cp"
heartdisease %>%
  ggplot(aes(x = factor(cp), y = chol)) +
  geom_boxplot(fill = "blue") +
  labs(
    title = "Colesterol según Dolor en el pecho",
    x = "Dolor de Pecho",
    y = "Colesterol"
  )

```

Distribución del nivel de colesterol según el tipo de dolor en el pecho:

```{r}
# Crea un gráfico de distribuciones de colesterol por género
heartdisease %>%
  ggplot(aes(x = chol, fill = factor(sex))) +
  geom_density(alpha = 0.5) +
  labs(
    title = "Distribución de Colesterol por Género",
    x = "Colesterol",
    y = "Densidad"
  ) +
  scale_fill_manual(values = c("blue", "red"), labels = c("Mujer", "Hombre")) +
  theme_minimal()



```

```{r}
# Carga la biblioteca tidyverse si aún no lo has hecho
library(tidyverse)

# Crea un gráfico de distribuciones de maxHR por género
heartdisease %>%
  ggplot(aes(x = maxHR, fill = factor(sex))) +
  geom_density(alpha = 0.5) +
  labs(
    title = "Distribución de Frecuencia Cardíaca Máxima por Género",
    x = "Frecuencia Cardíaca Máxima",
    y = "Densidad"
  ) +
  scale_fill_manual(values = c("blue", "red"), labels = c("Mujer", "Hombre")) +
  theme_minimal()

```

Análisis inferencial:

Matriz de correlaciones:

```{r}

correlation_matrix <- cor(heartdisease[, c("age", "restbp", "chol", "maxHR", "expeak", "mves")])

# Crear el corrplot con los valores de correlación
corrplot(correlation_matrix, method = "color", addCoef.col = "black")

```

Vector de medias de las variables cuantitativas:

```{r}
avrg_chol = mean(heartdisease$chol)
avrg_HR = mean(heartdisease$maxHR)
avrg_restbp = mean(heartdisease$restbp)
```

Contrastes de correlación:

1)  Contraste Edad, Máx Heart Rate:

Confirmamos que en la *población* grande (no en nuestra muestra) la edad y el número máximo de pulsaciones tienen correlación negativa. Esto significa que, a mayor edad se espera que disminuya el número máximo de pulsaciones por minuto.

```{r}

cor.test(heartdisease$maxHR, heartdisease$age, alternative = "less")


```

2)  Contraste de correlación expeak () vs maxHR:

Confirmamos que en la *población* grande (no en nuestra muestra) el número máximo de pulsaciones y el expeak tienen correlación negativa. Esto significa que, a mayor edad, la depresión en el segmento ST inducida por el ejercicio en relación con el reposo es menor.

```{r}
# expeak: Indica la depresión en el segmento ST inducida por el ejercicio en relación con el reposo. Con valor mínimmo de 0, y valor máximo de 6.20.
cor.test(heartdisease$maxHR, heartdisease$expeak, alternative = "less")

```

3)  Contraste de correlación Edad vs mves():

Confirmamos que en la *población* grande (no en nuestra muestra) la edad y la variable mves(), tienen correlación negativa. Esto significa que, a mayor edad, el número de vasos principales coloreados por fluoroscopía es menor.

```{r}
# expeak: Indica la depresión en el segmento ST inducida por el ejercicio en relación con el reposo. Con valor mínimmo de 0, y valor máximo de 6.20.
cor.test(heartdisease$age, heartdisease$mves, alternative = "less")

```

Gráfico para datos bivariantes:

El boxplot bivariante es un gráfico de dispersión que incluye dos elipses estimadas, la interior que contiene aproximadamente el 50% de los datos y la exterior que contiene aproximadamente el 95% de los datos. Este tipo de gráficos nos ayuda a localizar datos atípicos. Veamos un ejemplo con los datos de los pingüinos.

```{r}

a2<- heartdisease %>%
  select(maxHR,expeak) %>%
  as.matrix()

bvbox(a2,xlab = " Ritmo cardíaco máximo en pulsasiones por minuto", 
           ylab = " Indica la depresión en el segmento ST",
      pch = 19, cex = 1.25, col = "red")
```

```{r}
stars(a[,1:6], key.loc = c(44, 1.5),cex=0.45,
      labels=row.names(a[,1:4]), draw.segments=TRUE)
```

Caras de Chernoff:

```{r}
b<-heartdisease %>%
  select(sex,cp,fbs,restecg, exang, slope,tHR,fdiag)

b<- b %>% 
      filter(sex==1,
             cp==2, 
             fbs==0
             )
summary(heartdisease)
view(b)

#faces(b[,1:8],face.type = 1, scale =TRUE,print.info = TRUE)

```
