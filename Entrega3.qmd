---
title: "Entrega3"
author: "Ángel García, Arnau Piferrer y Guillem Serra"
format: html
editor: visual
---

<!-- Aixo per fer es beamer https://bookdown.org/yihui/rmarkdown/beamer-presentation.html -->

<!-- data set original https://archive.ics.uci.edu/dataset/45/heart+disease -->

Este es el [repositorio](https://github.com/GSMir/Entrega3), y el data set lo hemos sacado de este [link](https://archive.ics.uci.edu/dataset/45/heart+disease)

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = FALSE)
```

```{r, message = FALSE}
library(readr)
library(tidyverse)
library(MVA)
library(corrplot)
library(graphics)
library(GGally)
library("aplpack")

heartdisease = read_csv("https://archive.ics.uci.edu/ml/machine-learning-databases/heart-disease/processed.cleveland.data", col_names = FALSE, show_col_types = FALSE)
```

```{r}
heartdisease = heartdisease %>% rename(age = X1, sex = X2, cp = X3, restbp = X4, chol = X5, fbs = X6, restecg = X7, maxHR = X8, exang = X9, expeak = X10, slope = X11, mves = X12, tHR = X13, fdiag = X14)

heartdisease = heartdisease %>% filter(!str_detect(tHR, "\\?") & (!str_detect(mves, "\\?")))
```

Antes de empezar con el análisis multivariante, vamos a limpiar el dataset. Primero hemos cambiado el nombre de todas las variables, ya que ellas venian con X1,X2, etc, para las que enunciaremos después. A continuación hemos pasado a factor las variables que deberían serlo y no venían dadas como factor incialmente. Por último, como teníamos un número pequeño de muestras a las que les faltaban algunos datos, 6, las hemos eliminado. Cabe remarcar que la falta de datos estaba puesta con un interrogante, '?', en vez del típico 'NA'.

```{r}
heartdisease <- heartdisease %>%
    mutate(mves2 = as.numeric(heartdisease$mves), .after = mves) %>%
    select(-mves) %>%
    rename(mves = mves2)
heartdisease <- heartdisease %>%
    mutate(sex2 = as.factor(heartdisease$sex), .after = sex) %>%
    select(-sex) %>%
    rename(sex = sex2)
heartdisease <- heartdisease %>%
    mutate(cp2 = as.factor(heartdisease$cp), .after = cp) %>%
    select(-cp) %>%
    rename(cp = cp2)
heartdisease <- heartdisease %>%
    mutate(fbs2 = as.factor(heartdisease$fbs), .after = fbs) %>%
    select(-fbs) %>%
    rename(fbs = fbs2)
heartdisease <- heartdisease %>%
    mutate(restecg2 = as.factor(heartdisease$restecg), .after = restecg) %>%
    select(-restecg) %>%
    rename(restecg = restecg2)
heartdisease <- heartdisease %>%
    mutate(exang2 = as.factor(heartdisease$exang), .after = exang) %>%
    select(-exang) %>%
    rename(exang = exang2)
heartdisease <- heartdisease %>%
    mutate(slope2 = as.factor(heartdisease$slope), .after = slope) %>%
    select(-slope) %>%
    rename(slope = slope2)
heartdisease = heartdisease %>% 
    mutate(
        tHR2 = case_when(
            tHR == "3.0" ~ "3",
            tHR == "6.0" ~ "6",
            tHR == "7.0" ~ "7"),
        .keep = "all", .after = tHR) %>%
    select(-tHR) %>%
    rename(tHR = tHR2)
heartdisease <- heartdisease %>%
    mutate(tHR2 = as.factor(heartdisease$tHR), .after = tHR) %>%
    select(-tHR) %>%
    rename(tHR = tHR2)
heartdisease <- heartdisease %>%
    mutate(fdiag2 = as.factor(heartdisease$fdiag), .after = fdiag) %>%
    select(-fdiag) %>%
    rename(fdiag = fdiag2)
```

El objetivo del estudio original es detectar la presencia de enferemedades del corazón en un paciente. Hay `r nrow(heartdisease)` visualizaciones de `r ncol(heartdisease)` variables.

<!-- Cambiar nom de algunes de ses vairiables, perque tenguin mes sentit -->

Describamos ahora las variables:

<!-- Gráfico de los electrocardiogramas -->

```{r, fig.cap = "Electrocardiograma", out.width = '50%'}
knitr::include_graphics("SinusRhythmLabels.svg.png")
```

-   **age**: Año del paciente, valor entero, con un mínimo de 29 y un máximo de 77 años. La media de edad de los pacientes está en los 54.54 años.

-   **sex**: Sexo cromosómico del paciente, variable categórica, toma el valor 0 para el femenino y 1 para el masculino. Encontramos un total de 96 mujeres y 201 hombres.

-   **cp**: "Chest Pain" hace referencia al tipo de dolor que se sufre en el pecho, es una variable categórica. Toma los valores 1 para angina de pecho típica, 2 para angina de pecho atípica, 3 para dolores que no son de angina de pecho, 4 asintomático.

-   **restbp**: Presión de la sangre en reposo (mm Hg), una variable numérica, con el valor mínimo en 94 y el valor máximo en 200, con valor medio 131.69 mm Hg.

-   **chol**: Colesterol en sangre (mg/dl), variable numérica con un mínimo de 126 y un máximo de 564, siendo el nivel medio de colesterol 247.35 mg/dl.

-   **fbs**: Booleano que determina si la cantidad de azúcar en sangre en ayuno es mayor a 120mg/dl, toma el valor 0 para negarlo, y 1 para afirmarlo.

-   **restecg**: Resultados del electrocardiograma en reposo, una variable categórica, que indica unos resultados normales con un 0, con un 1 indica anomalías en el segmento ST-T (inversiones de las ondas T y/o elevaciones o depresiones de las ondas ST superiores a 0.05mV, y con un 2 indica una alta probabilidad o asegura una hipertrofia ventricular izquierda.

-   **maxHR**: Indica el ritmo cardíaco máximo alcanzado, con valor mínimo de 71, y valor máximo de 202. El valor medio de esta variable es 149.60.

-   **exang**: Booleano que indica si la angina se ha inducido por el ejercicio, tomando 1 como si, y 0 como no.

-   **expeak**: Indica la depresión en el segmento ST inducida por el ejercicio en relación con el reposo. Con valor mínimmo de 0, y valor máximo de 6.20.

-   **slope**: Indica la pendiente en la cima del segmento ST de ejercicio. Toma el 0 cuando la pendiente es positiva, 1 cuando la pendiente es nula, y 2 cuando la pendiente es negativa.

-   **mves**: Número de vasos principales coloreados por fluoroscopía. Toma valores enteros entre 0 y 3, inclusive.

-   **tHR**: Variable categória que indica el tipo de ritmo cardíaco. Toma el valor 3 para el ritmo normal, 6 para defecto reparado, y 7 para defecto reversible.

-   **fdiag**: Booleano para el diagnosis de la enfermedad del corazón. Toma el 0 cuando la reducción del diámetro es menor al 50%, y 1 cuando es superior al 50%.

```{=html}
<!--- COMENTARIOS:

Se deixa sa pregunta per es resultats que es treguin des treball, i la formulam després.

1) fdiag és correcte?
2) augmenten amb es anys?
3) diferencies de sexe?
si en general hi ha mateixes mesures de sa majoria de variables per sexe, o algunes més elevades etc.? 

--->
```
Ángel \[noche del miércoles al jueves\]: voy a ir haciendo gráficos cruzando datos, haré todos los cruces que se me vayan ocurriendo. Luego ya en haber tenido ocasión de charlar los tres podemos decidir cuáles nos parecen más relevantes y cuales no.

1)  Cruce del nivel de colesterol únicamente según el sexo:

Creo que tiene la pega de que el colesterol puede ser que sea algo que dependa más de la edad y no tanto del sexo. La gente mayor tiene a tener más colesterol que la gente joven. Propongo ahora el mismo gráfico pero teniendo en cuenta franjas de edad.

```{r}
# Estudiamos la dispersión de los niveles de colesterol según el sexo.

ggplot(heartdisease, aes(x = factor(sex), y = chol, fill = factor(sex))) +
  geom_boxplot() +
  labs(
    title = "Nivel de Colesterol según sexo",
    x = "Sexo",
    y = "Nivel de Colesterol (mg/dl)"
  ) +
  scale_x_discrete(labels = c("Mujeres", "Hombres")) +
  theme_minimal() +
  theme(legend.title = element_blank())  # Oculta el título de la leyenda

```

2)  Niveles de colesterol según edad y sexos de los pacientes. He agrupado las edades en franjas que empiezan en el mínimo de la variable "age" y de longitud 10 años.

```{r}
# Creamos una nueva columna 'decade' que agrupa las edades en décadas
heartdisease <- heartdisease %>%
  mutate(decade = cut(age, breaks = seq(29, 80, by = 10), right = FALSE))

# Creamos un diagrama de caja y bigotes:

ggplot(heartdisease, aes(x = decade, y = chol, fill = factor(sex))) +
  geom_boxplot() +
  labs(
    title = "Nivel de Colesterol por Sexo y Década de Edad",
    x = "Década de Edad",
    y = "Nivel de Colesterol"
  ) +
  scale_fill_discrete(name = "Sexo", labels = c("0" = "Mujer", "1" = "Hombre")) +
  theme_minimal() +
  theme(legend.title = element_blank())

```

3)  Se replican los gráficos anteriores pero para el nivel de presión sanguínea.

```{r}
ggplot(heartdisease, aes(x = factor(sex), y = restbp, fill = factor(sex))) +
  geom_boxplot() +
  labs(
    title = "Nivel de Presión Arterial en Reposo según Sexo",
    x = "Sexo",
    y = "Nivel de Presión Arterial en Reposo (mm Hg)"
  ) +
  scale_x_discrete(labels = c("Mujeres", "Hombres")) +
  theme_minimal() +
  theme(legend.title = element_blank())

```

4)  

```{r}
# Creamos una nueva columna 'decade' que agrupa las edades en décadas
heartdisease <- heartdisease %>%
  mutate(decade = cut(age, breaks = seq(29, 80, by = 10), right = FALSE))

# Creamos un diagrama de caja y bigotes para 'restbp':
ggplot(heartdisease, aes(x = decade, y = restbp, fill = factor(sex))) +
  geom_boxplot() +
  labs(
    title = "Nivel de Presión Arterial en Reposo por Sexo y Década de Edad",
    x = "Década de Edad",
    y = "Nivel de Presión Arterial en Reposo (mm Hg)"
  ) +
  scale_fill_discrete(name = "Sexo", labels = c("0" = "Mujer", "1" = "Hombre")) +
  theme_minimal() +
  theme(legend.title = element_blank())

```

5)  Nube de puntos: con esto podríamos ver si hay (a priori, luego podemos hacer el contraste de correlación oportuno) correlación/covarianza entre las variables maxHR y Colesterol. (La idea sería que las personas con mayor nivel de colesterol suelen estar menos en forma y por ello sus pulsaciones podrían dispararse al hacer ejercicio).

```{r}

# Carga la biblioteca ggplot2 si aún no lo has hecho
library(ggplot2)

# Crea un scatter plot de chol y maxHR con colores por género
ggplot(heartdisease, aes(x = chol, y = maxHR, color = factor(sex))) +
  geom_point() +
  labs(
    title = "Nube de Puntos de Colesterol vs. Frecuencia Cardíaca Máxima",
    x = "Colesterol",
    y = "Frecuencia Cardíaca Máxima"
  ) +
  scale_color_manual(values = c("blue", "red"), labels = c("Mujer", "Hombre")) +
  theme_minimal()


```


5)  Distribución de datos: (para ver de qué hay más)

Mostrar la distribución de las variables numéricas (que son edades, presión arterial, nivel de colesterol y frecuencia cardiaca máxima) para ver cómo están repartidas en nuestro conjunto de datos (si de forma uniforme o no uniforme).

```{r}
# Esto sirve, en teoría, para hacer gráficas de forma conjunta (vamos, para que salgan 4 gráficas en una misma imagen/figura).

library(patchwork)
```

```{r}

# Crea 4 histogramas
histogram1 <- heartdisease %>%
  ggplot(aes(x = age)) +
  geom_histogram(binwidth = 5, fill = "blue", color = "black") +
  labs(
    title = "Histograma 1",
    x = "Edad",
    y = "Frecuencia"
  )

histogram2 <- heartdisease %>%
  ggplot(aes(x = restbp)) +
  geom_histogram(binwidth = 5, fill = "green", color = "black") +
  labs(
    title = "Presión Arterial en Reposo",
    x = "Presión Arterial en Reposo",
    y = "Frecuencia"
  )

histogram3 <- heartdisease %>%
  ggplot(aes(x = chol)) +
  geom_histogram(binwidth = 10, fill = "red", color = "black") +
  labs(
    title = "Nivel de colesterol",
    x = "Colesterol en Sangre (mg/dl)",
    y = "Frecuencia"
  )

histogram4 <- heartdisease %>%
  ggplot(aes(x = maxHR)) +
  geom_histogram(binwidth = 5, fill = "purple", color = "black") +
  labs(
    title = "Frecuencia Cardíaca Máxima",
    x = "Ritmo Cardíaco Máximo",
    y = "Frecuencia"
  )

# Combina los histogramas en una sola figura
histogram1 + histogram2 + histogram3 + histogram4


```

6)  Frecuencias de los datos categóricos (saber la cantidad de frecuencias observadas para cada una de las variables factor).

```{r}
# Carga las bibliotecas necesarias
library(tidyverse)
library(patchwork)

# Crea los gráficos de barras para las tres variables categóricas
plot_sex <- heartdisease %>%
  count(sex) %>%
  ggplot(aes(x = factor(sex), y = n)) +
  geom_bar(stat = "identity", fill = "blue") +
  labs(
    title = "Sexo",
    x = "Género",
    y = "Frecuencia"
  )

plot_cp <- heartdisease %>%
  count(cp) %>%
  ggplot(aes(x = factor(cp), y = n)) +
  geom_bar(stat = "identity", fill = "green") +
  labs(
    title = "Tipos de Chestpain",
    x = "Tipo de Dolor en el Pecho",
    y = "Frecuencia"
  )

plot_fbs <- heartdisease %>%
  count(fbs) %>%
  ggplot(aes(x = factor(fbs), y = n)) +
  geom_bar(stat = "identity", fill = "red") +
  labs(
    title = "Niveles de Azúcar en Sangre en Ayuno",
    x = "Niveles de Azúcar en Sangre en Ayuno",
    y = "Frecuencia"
  )

# Combina los gráficos en una figura en paralelo
(plot_sex | plot_cp | plot_fbs)

```

7)  

```{r}

# Crea un boxplot de "chol" por "cp"
heartdisease %>%
  ggplot(aes(x = factor(cp), y = chol)) +
  geom_boxplot(fill = "blue") +
  labs(
    title = "Colesterol según Dolor en el pecho",
    x = "Dolor de Pecho",
    y = "Colesterol"
  )

```

Distribución del nivel de colesterol según el tipo de dolor en el pecho:

```{r}
# Crea un gráfico de distribuciones de colesterol por género
heartdisease %>%
  ggplot(aes(x = chol, fill = factor(sex))) +
  geom_density(alpha = 0.5) +
  labs(
    title = "Distribución de Colesterol por Género",
    x = "Colesterol",
    y = "Densidad"
  ) +
  scale_fill_manual(values = c("blue", "red"), labels = c("Mujer", "Hombre")) +
  theme_minimal()



```

```{r}
# Carga la biblioteca tidyverse si aún no lo has hecho
library(tidyverse)

# Crea un gráfico de distribuciones de maxHR por género
heartdisease %>%
  ggplot(aes(x = maxHR, fill = factor(sex))) +
  geom_density(alpha = 0.5) +
  labs(
    title = "Distribución de Frecuencia Cardíaca Máxima por Género",
    x = "Frecuencia Cardíaca Máxima",
    y = "Densidad"
  ) +
  scale_fill_manual(values = c("blue", "red"), labels = c("Mujer", "Hombre")) +
  theme_minimal()

```

Análisis inferencial:



Matriz de correlaciones:

```{r}

correlation_matrix <- cor(heartdisease[, c("age", "restbp", "chol", "maxHR", "expeak", "mves")])

# Crear el corrplot con los valores de correlación
corrplot(correlation_matrix, method = "color", addCoef.col = "black")

```

Vector de medias de las variables cuantitativas:

```{r}
avrg_chol = mean(heartdisease$chol)
avrg_HR = mean(heartdisease$maxHR)
avrg_restbp = mean(heartdisease$restbp)
```

Contrastes de correlación:

1)  Contraste Edad, Máx Heart Rate:

Confirmamos que en la *población* grande (no en nuestra muestra) la edad y el número máximo de pulsaciones tienen correlación negativa. Esto significa que, a mayor edad se espera que disminuya el número máximo de pulsaciones por minuto.

```{r}

cor.test(heartdisease$maxHR, heartdisease$age, alternative = "less")


```

2)  Contraste de correlación expeak () vs maxHR:

```{r}
# expeak: Indica la depresión en el segmento ST inducida por el ejercicio en relación con el reposo. Con valor mínimmo de 0, y valor máximo de 6.20.
cor.test(heartdisease$maxHR, heartdisease$expeak, alternative = "less")

```

Gráfico para datos bivariantes:

El boxplot bivariante es un gráfico de dispersión que incluye dos elipses estimadas, la interior que contiene aproximadamente el 50% de los datos y la exterior que contiene aproximadamente el 95% de los datos. Este tipo de gráficos nos ayuda a localizar datos atípicos. Veamos un ejemplo con los datos de los pingüinos.

```{r}

a2<- heartdisease %>%
  select(maxHR,expeak) %>%
  as.matrix()

bvbox(a2,xlab = " Ritmo cardíaco máximo en pulsasiones por minuto", 
           ylab = " Indica la depresión en el segmento ST",
      pch = 19, cex = 1.25, col = "red")
```

Matrices de dispersión:

```{r}
a<-heartdisease %>%
  select(age,restbp,chol,maxHR, expeak, mves)

pairs(a,
      col = c("red", "blue")[as.integer(heartdisease$sex)], 
      pch = 18)


```

```{r}
ggpairs(a)
```

```{r}
stars(a[,1:4], key.loc = c(44, 1.5),cex=0.45,
      labels=row.names(a[,1:4]), draw.segments=TRUE)
```

Caras de Chernoff:

```{r}
b<- heartdisease %>% 
      filter(cp=='2', 
             fbs=='1',
             sex=="0",
             restecg=='1',
             exang=='0',
             slope=='1',
             mves=='1',
             tHR=='6',
             fdiag=='1'
             )

#faces(b[,1:6],face.type = 1, scale =TRUE,print.info = TRUE)

```




